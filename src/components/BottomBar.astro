---

---

<div class="bottom-bar">
  <div class="bottom-bar__nav">
    <ul class="bottom-bar__list">
      <li class="bottom-bar__item">
        <button class="bottom-bar__button" type="button">宿泊予約</button>
      </li>
      <li class="bottom-bar__item">
        <a class="bottom-bar__link" href="#">団体利用の方</a>
      </li>
    </ul>
    <button class="bottom-bar__toggle">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="75"
        height="45"
        viewBox="0 0 75 45"
        fill="none"
      >
        <path
          d="M2 2H73"
          stroke="white"
          stroke-width="3.2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M2 22H73"
          stroke="white"
          stroke-width="3.2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
        <path
          d="M2 43H73"
          stroke="white"
          stroke-width="3.2"
          stroke-linecap="round"
          stroke-linejoin="round"></path>
      </svg>
    </button>
  </div>
</div>

<style lang="scss">
  // 必要なmixin/functionをインポート
  @import '../styles/variables';
  @import '../styles/functions';
  @import '../styles/mixins';

  /* スマホ固定バー */
  .bottom-bar {
    display: block;
    background: linear-gradient(270deg, #026995 0%, #0098bf 100%);
    width: 100%;
    height: max-content;
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 20;
    transform: translateY(0);
    transition: transform 0.3s ease, opacity 0.3s ease;
    @include tablet-up {
      display: none;
    }

    &.hide-on-top {
      /* トップページで上部にいる時の非表示状態 */
      transform: translateY(100%);
      opacity: 0;
    }

    &.show-on-scroll {
      /* スクロール時の表示状態 */
      transform: translateY(0);
      opacity: 1;
    }
    &__nav {
      display: flex;
      gap: spx(49);
      align-items: center;
      padding-left: spx(40);
      padding-top: spx(31);
      padding-bottom: spx(31);
    }

    &__list {
      display: flex;
      gap: spx(18);
    }

    &__item {
    }

    &__button {
      color: #fff;
      text-align: center;
      font-size: spx(30);
      width: spx(250);
      height: spx(67);
      border: solid 1px #fff;
      border-radius: spx(10);
      display: grid;
      place-items: center;
    }

    &__link {
      color: #fff;
      text-align: center;
      font-size: spx(30);
      width: spx(250);
      height: spx(67);
      border: solid 1px #fff;
      border-radius: spx(10);
      display: grid;
      place-items: center;
    }

    &__toggle {
      width: spx(71);
      height: spx(41);
      svg {
        width: 100%;
        height: 100%;
        path {
        }
      }
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // BottomBarスクロール表示制御（トップページのみ）
  const bottomBar = document.querySelector('.bottom-bar') as HTMLElement | null;
  const isTopPage = window.location.pathname === '/' || window.location.pathname === '/index.html';

  if (bottomBar && isTopPage) {
    // トップページでは初期状態で非表示
    bottomBar.classList.add('hide-on-top');
    
    let scrollTimeout: number | null = null;

    // スクロールイベント（スロットリング付き）
    function handleScroll() {
      if (scrollTimeout) {
        clearTimeout(scrollTimeout);
      }

      scrollTimeout = window.setTimeout(() => {
        if (!bottomBar) return; // bottomBarがnullの場合は早期リターン

        const scrollY = window.scrollY;
        const scrollThreshold = 30; // 30px閾値

        if (scrollY > scrollThreshold) {
          // 30px以上スクロール：表示
          bottomBar.classList.remove('hide-on-top');
          bottomBar.classList.add('show-on-scroll');
        } else {
          // 30px以下：非表示
          bottomBar.classList.add('hide-on-top');
          bottomBar.classList.remove('show-on-scroll');
        }
      }, 16); // 60FPSに合わせて16ms間隔
    }

    window.addEventListener('scroll', handleScroll);
    
    // 初期スクロール位置チェック
    handleScroll();
  }
});
</script>
