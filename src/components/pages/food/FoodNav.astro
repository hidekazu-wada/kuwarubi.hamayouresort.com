---

---

<nav class="food-nav">
  <ul class="food-nav__list">
    <li class="food-nav__item" data-section="dinner">
      <a href="#dinner" class="food-nav__link">
        <article class="food-nav__card">
          <span class="food-nav__subtitle">西湖と山の豊かな滋味を堪能</span>
          <h2 class="food-nav__title">夕食</h2>
        </article>
      </a>
    </li>
    <li class="food-nav__item" data-section="bbq">
      <a href="#bbq" class="food-nav__link">
        <article class="food-nav__card">
          <span class="food-nav__subtitle">大自然の中で食べる</span>
          <h2 class="food-nav__title">BBQ</h2>
          <span class="food-nav__note food-nav__subtitle">（夕食・昼食）</span>
        </article>
      </a>
    </li>
    <li class="food-nav__item" data-section="houtou">
      <a href="#houtou" class="food-nav__link">
        <article class="food-nav__card">
          <span class="food-nav__subtitle">ダッチオーブン</span>
          <h2 class="food-nav__title">
            ほうとう作り<br class="only-sp" />体験
          </h2>
        </article>
      </a>
    </li>
    <li class="food-nav__item" data-section="curry">
      <a href="#curry" class="food-nav__link">
        <article class="food-nav__card">
          <span class="food-nav__subtitle">竈門で炊く</span>
          <h2 class="food-nav__title">
            ご飯・カレー<br class="only-sp" />作り体験
          </h2>
        </article>
      </a>
    </li>
    <li class="food-nav__item" data-section="breakfast">
      <a href="#breakfast" class="food-nav__link">
        <article class="food-nav__card">
          <span class="food-nav__subtitle">自然からの贈り物を味わう</span>
          <h2 class="food-nav__title">朝食</h2>
        </article>
      </a>
    </li>
  </ul>
</nav>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // ===============================
    // IntersectionObserver設定
    // ===============================
    const navItems = document.querySelectorAll('.food-nav__item');
    const sections = ['dinner', 'bbq', 'houtou', 'curry', 'breakfast']
      .map((id) => document.getElementById(id))
      .filter((el): el is HTMLElement => el !== null);

    if (sections.length > 0 && navItems.length > 0) {
      // オプション設定（画面の中央付近で判定）
      const options = {
        rootMargin: '-30% 0px -60% 0px',
        threshold: 0,
      };

      // IntersectionObserverを作成
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // すべてのアイテムからactiveクラスを削除
            navItems.forEach((item) => item.classList.remove('active'));

            // 対応するナビゲーションアイテムにactiveクラスを追加
            const activeItem = document.querySelector(
              `.food-nav__item[data-section="${entry.target.id}"]`
            );
            if (activeItem) {
              activeItem.classList.add('active');
            }
          }
        });
      }, options);

      // 各セクションを監視
      sections.forEach((section) => {
        observer.observe(section);
      });
    }

    // ===============================
    // スムーススクロール設定
    // ===============================
    const navLinks = document.querySelectorAll('.food-nav__link');

    navLinks.forEach((link) => {
      link.addEventListener('click', (e) => {
        e.preventDefault();

        const targetId = link.getAttribute('href');
        if (targetId && targetId.startsWith('#')) {
          const targetSection = document.querySelector(
            targetId
          ) as HTMLElement | null;

          if (targetSection) {
            // sticky navの高さを取得
            const nav = document.querySelector(
              '.food-nav'
            ) as HTMLElement | null;
            const navHeight = nav ? nav.offsetHeight : 0;

            // デバイスサイズに応じた調整値
            // モバイル: 0px, タブレット以上: 0px
            const offsetAdjust = window.innerWidth >= 744 ? 0 : 0;

            // 目標位置を計算（セクションの装飾要素が隠れる位置へ）
            const targetPosition =
              targetSection.offsetTop - navHeight + offsetAdjust;

            // スムーススクロール
            window.scrollTo({
              top: targetPosition,
              behavior: 'smooth',
            });
          }
        }
      });
    });
  });
</script>

<style lang="scss">
  @import '../../../styles/variables';
  @import '../../../styles/functions';
  @import '../../../styles/mixins';
  // ============================================================
  // フードメニューナビゲーション
  // ============================================================

  .food-nav {
    position: sticky;
    z-index: 10;
    top: 0;
    padding: spx(20) 0;
    background-color: #fff;
    @include tablet-up {
      padding: ppx(42 * 1.2) 0 ppx(46 * 1.2);
    }
    @include desktop-up {
      padding: ppx(42) 0 ppx(46);
    }

    &__list {
      display: grid;
      grid-template-columns: max-content max-content max-content;
      gap: spx(7);
      justify-content: center;
      @include tablet-up {
        grid-template-columns: repeat(3, max-content);
        gap: ppx(15 * 1.2);
      }
      @include desktop-up {
        grid-template-columns: repeat(5, max-content);
      }
    }

    &__item {
      @include tablet-up {
      }
      @include desktop-up {
      }
      &.active {
        .food-nav__link {
          background: var(--blue_6, #054965);
        }
        .food-nav__subtitle,
        .food-nav__title {
          color: #fff;
        }
      }
    }

    &__link {
      display: flex;
      width: spx(210);
      height: spx(84);
      border-radius: spx(15);
      align-items: center;
      justify-content: center;
      background: #e5e5e5;
      transition: background 0.3s ease;

      @include tablet-up {
        width: ppx(401 * 1.2);
        height: ppx(154 * 1.2);
        border-radius: ppx(17.393 * 1.2);
      }
      @include desktop-up {
        width: ppx(401);
        height: ppx(154);
        border-radius: ppx(17.393);
      }

      @include hover {
        &:hover {
          background: var(--green_2, #adc400);

          .food-nav__subtitle,
          .food-nav__title {
            color: #fff;
          }
        }
      }
    }

    &__card {
      @include tablet-up {
      }
      @include desktop-up {
      }
    }

    &__subtitle {
      display: none;
      transition: color 0.3s ease;
      @include tablet-up {
        display: block;
        color: var(--blue_6, #054965);
        text-align: center;
        font-family: 'Zen Kaku Gothic New';
        font-size: ppx(26 * 1.2);
        font-style: normal;
        font-weight: 500;
        line-height: 150%; /* 39px */
      }
      @include desktop-up {
        font-size: ppx(26);
      }
    }

    &__title {
      color: var(--blue_6, #054965);
      text-align: center;
      font-family: 'Zen Kaku Gothic New';
      font-size: spx(27);
      font-style: normal;
      font-weight: 500;
      line-height: 110%; /* 29.7px */
      transition: color 0.3s ease;
      @include tablet-up {
        font-size: ppx(32 * 1.2);
        font-weight: 700;
        line-height: 150%;
      }
      @include desktop-up {
        font-size: ppx(32);
      }
      .only-sp {
        display: block;
        @include tablet-up {
          display: none;
        }
      }
    }

    &__note {
      @include tablet-up {
      }
      @include desktop-up {
      }
    }
  }
</style>
