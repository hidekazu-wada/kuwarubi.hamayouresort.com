---
// メインSCSSファイルをインポート
import '../styles/main.scss';
import BottomBar from '../components/BottomBar.astro';
import MenuOverlay from '../components/MenuOverlay.astro';
import Sidebar from '../components/Sidebar.astro';
import Footer from '../components/Footer.astro';
import VideoModal from '../components/VideoModal.astro';
import BookingModal from '../components/Booking-modal.astro';
import Hero from '../components/pages/top/Hero.astro';
import Activities from '../components/pages/top/Activities.astro';

import { getImage } from 'astro:assets';
import LocationImg1 from '../assets/images/top/location/img1.png';
import LocationImg2 from '../assets/images/top/location/img2.png';

const locationImg1 = await getImage({
  src: LocationImg1,
  format: 'webp',
  widths: [606, 900, 1180], // スマホ、タブレット、デスクトップ
});
const locationImg2 = await getImage({
  src: LocationImg2,
  format: 'webp',
  widths: [546, 750, 867], // スマホ、タブレット、デスクトップ
});
---

<html lang="ja">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Zen+Kaku+Gothic+New:wght@400;500;900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <div class="layout-container">
      <!-- サイドバー -->
      <Sidebar />
      <!-- スマホ専用の下部固定バー -->
      <BottomBar />
      <!-- メニューオーバーレイ -->
      <MenuOverlay />
      <!-- 動画モーダル（メニューオーバーレイより上位階層） -->
      <VideoModal />
      <!-- 宿泊予約モーダル（動画モーダルと同等階層） -->
      <BookingModal />

      <!-- メインコンテンツ -->
      <main class="main-content">
        <!-- ヒーローセクション -->
        <Hero />
        <section class="location">
          <header class="location__header">
            <h2 class="location__title">LOCATION</h2>
            <div class="location__subtitle">
              <span class="location__subtitle-line">山と湖の</span>
              <span class="location__subtitle-line">大自然に包まれた</span>
              <span class="location__subtitle-line">湖畔のホテル</span>
            </div>
          </header>
          <div class="location__content">
            <picture class="location__image location__image--main">
              <!-- デスクトップ（1024px以上） -->
              <source
                media="(min-width: 1024px)"
                srcset={locationImg1.srcSet.toString()}
              />
              <!-- タブレット（744px以上） -->
              <source
                media="(min-width: 744px)"
                srcset={locationImg1.srcSet.toString()}
              />
              <!-- スマホ（744px未満） -->
              <img src={locationImg1.src} alt="西湖の美しい湖畔の風景" />
            </picture>
            <div class="location__description">
              <span class="location__description-line"
                >西湖は富士五湖の中でも特別な存在で、</span
              >
              <span class="location__description-line"
                >自然のままの美しさを保ち、</span
              >
              <span class="location__description-line"
                >富士山の構成資産としても認定されています。</span
              >
              <span class="location__description-line"
                >この湖は、絶滅したと思われていた</span
              >
              <span class="location__description-line"
                >クニマスが生息する日本で唯一の湖です。</span
              >
              <span class="location__description-line"
                >開発が進んでいないため、</span
              >
              <span class="location__description-line"
                >自然のグラデーションが際立ち、</span
              >
              <span class="location__description-line"
                >日常のストレスを忘れさせてくれる</span
              >
              <span class="location__description-line">心地よい場所です。</span>
            </div>
            <picture class="location__image location__image--sub">
              <!-- デスクトップ（1024px以上） -->
              <source
                media="(min-width: 1024px)"
                srcset={locationImg2.srcSet.toString()}
              />
              <!-- タブレット（744px以上） -->
              <source
                media="(min-width: 744px)"
                srcset={locationImg2.srcSet.toString()}
              />
              <!-- スマホ（744px未満） -->
              <img src={locationImg2.src} alt="樹海の美しい風景" />
            </picture>
          </div>
        </section>

        <!-- アクティビティーズセクション -->
        <Activities />
      </main>
      <!-- フッター -->
      <Footer />
    </div>

    <script>
      // DOMロード後に実行
      document.addEventListener('DOMContentLoaded', () => {
        // メニュー機能
        const pcMenuToggle = document.getElementById('menu-toggle');
        const mobileMenuToggle = document.querySelector('.bottom-bar__toggle');
        const mobileMenuClose = document.querySelector('.menu-overlay__close');
        const menuOverlay = document.getElementById('menu-overlay');
        const sidebar = document.querySelector('.sidebar');

        // メニュー状態管理
        let isMenuOpen = false;

        // メニュー開閉の共通関数
        function toggleMenu() {
          if (!menuOverlay) return;

          isMenuOpen = !isMenuOpen;

          if (isMenuOpen) {
            menuOverlay.classList.add('show');
            if (sidebar) {
              sidebar.classList.add('menu-open');
            }
            // スクロールを禁止
            document.body.style.overflow = 'hidden';
          } else {
            menuOverlay.classList.remove('show');
            if (sidebar) {
              sidebar.classList.remove('menu-open');
            }
            // スクロールを復元
            document.body.style.overflow = '';
          }
        }

        // メニューを閉じる関数
        function closeMenu() {
          if (!menuOverlay) return;

          isMenuOpen = false;
          menuOverlay.classList.remove('show');
          if (sidebar) {
            sidebar.classList.remove('menu-open');
          }
          // スクロールを復元
          document.body.style.overflow = '';
        }

        // 動画モーダル関連の要素
        const videoModal = document.querySelector(
          '.video-modal'
        ) as HTMLElement | null;
        const videoModalClose = document.querySelector(
          '.video-modal__close'
        ) as HTMLElement | null;
        const heroMovieThumbnail = document.querySelector(
          '.hero__movie-thumbnail'
        ) as HTMLElement | null;
        const heroMoviePlayIcon = document.querySelector(
          '.hero__movie-play-icon'
        ) as HTMLElement | null;
        const heroMoviePlayText = document.querySelector(
          '.hero__movie-play-text'
        ) as HTMLElement | null;
        const videoIframe = document.querySelector(
          '.video-modal iframe'
        ) as HTMLIFrameElement | null;

        // 動画モーダルを開く関数
        function openVideoModal() {
          if (videoModal) {
            videoModal.style.opacity = '1';
            videoModal.style.visibility = 'visible';
            // スクロールを禁止
            document.body.style.overflow = 'hidden';
          }
        }

        // 動画モーダルを閉じる関数
        function closeVideoModal() {
          if (videoModal && videoIframe) {
            videoModal.style.opacity = '0';
            videoModal.style.visibility = 'hidden';
            // 動画を停止（iframe srcを再設定）
            const currentSrc = videoIframe.src;
            videoIframe.src = '';
            videoIframe.src = currentSrc;
            // スクロールを復元
            document.body.style.overflow = '';
          }
        }

        // サムネイルクリックで動画モーダルを開く
        if (heroMovieThumbnail) {
          heroMovieThumbnail.addEventListener('click', openVideoModal);
        }

        // 再生アイコンクリックで動画モーダルを開く
        if (heroMoviePlayIcon) {
          heroMoviePlayIcon.addEventListener('click', openVideoModal);
        }

        // 再生テキストクリックで動画モーダルを開く
        if (heroMoviePlayText) {
          heroMoviePlayText.addEventListener('click', openVideoModal);
        }

        // モーダル閉じるボタン
        if (videoModalClose) {
          videoModalClose.addEventListener('click', closeVideoModal);
        }

        // オーバーレイクリックで閉じる（任意）
        if (videoModal) {
          videoModal.addEventListener('click', (e) => {
            if (
              e.target === videoModal ||
              (e.target as HTMLElement).classList.contains(
                'video-modal__overlay'
              )
            ) {
              closeVideoModal();
            }
          });
        }

        // ブッキングモーダル関連の要素
        const bookingModal = document.querySelector(
          '.booking-modal'
        ) as HTMLElement | null;
        const bookingModalClose = document.querySelector(
          '.booking-modal__close'
        ) as HTMLElement | null;
        const sidebarBookingButton = document.querySelector(
          '.sidebar-menu-button'
        ) as HTMLElement | null;
        const menuOverlayBookingButton = document.querySelector(
          '.menu-overlay__button'
        ) as HTMLElement | null;
        const bottomBarBookingButton = document.querySelector(
          '.bottom-bar__button'
        ) as HTMLElement | null;

        // ブッキングモーダルを開く関数
        function openBookingModal() {
          if (bookingModal) {
            bookingModal.style.opacity = '1';
            bookingModal.style.visibility = 'visible';
            // スクロールを禁止
            document.body.style.overflow = 'hidden';
          }
        }

        // ブッキングモーダルを閉じる関数
        function closeBookingModal() {
          if (bookingModal) {
            bookingModal.style.opacity = '0';
            bookingModal.style.visibility = 'hidden';
            // スクロールを復元
            document.body.style.overflow = '';
          }
        }

        // ブッキングモーダル閉じるボタン
        if (bookingModalClose) {
          bookingModalClose.addEventListener('click', closeBookingModal);
        }

        // サイドバーの宿泊予約ボタンクリック（タブレット・デスクトップ）
        if (sidebarBookingButton) {
          sidebarBookingButton.addEventListener('click', (e) => {
            e.preventDefault();
            openBookingModal();
          });
        }

        // メニューオーバーレイの宿泊予約ボタンクリック（スマホメニュー内）
        if (menuOverlayBookingButton) {
          menuOverlayBookingButton.addEventListener('click', (e) => {
            e.preventDefault();
            openBookingModal();
          });
        }

        // スマホ下部バーの宿泊予約ボタンクリック
        if (bottomBarBookingButton) {
          bottomBarBookingButton.addEventListener('click', (e) => {
            e.preventDefault();
            openBookingModal();
          });
        }

        // ブッキングモーダルオーバーレイクリックで閉じる
        if (bookingModal) {
          bookingModal.addEventListener('click', (e) => {
            if (
              e.target === bookingModal ||
              (e.target as HTMLElement).classList.contains(
                'booking-modal__overlay'
              )
            ) {
              closeBookingModal();
            }
          });
        }

        // 必要な要素が存在することを確認してイベントリスナーを設定
        if (menuOverlay) {
          // PCメニューボタン
          if (pcMenuToggle) {
            pcMenuToggle.addEventListener('click', toggleMenu);
          }

          // スマホメニュー開くボタン
          if (mobileMenuToggle) {
            mobileMenuToggle.addEventListener('click', toggleMenu);
          }

          // スマホメニュー閉じるボタン
          if (mobileMenuClose) {
            mobileMenuClose.addEventListener('click', closeMenu);
          }
        }
      });
    </script>
  </body>

  <style lang="scss">
    // 必要なmixin/functionをインポート
    @import '../styles/variables';
    @import '../styles/functions';
    @import '../styles/mixins';

    /* 基本構造 */
    .layout-container {
      display: grid;
      grid-template:
        'main'
        'footer'
        /1fr;
      min-height: 100vh;
      @include tablet-up {
        grid-template:
          'sidebar main'
          'sidebar footer'
          / tpx($sidebar-width) 1fr;
      }
      @include desktop-up {
        grid-template:
          'sidebar main'
          'sidebar footer'
          / ppx($sidebar-width) 1fr;
      }
    }

    /* メインコンテンツ */
    .main-content {
      grid-area: main;
      position: relative;
    }

    /* ロケーションセクション */
    .location {
      padding-top: spx(140);
      @include tablet-up {
        padding-top: ppx(226) * 1.2;
      }
      @include desktop-up {
        padding-top: ppx(226);
      }
      &__header {
      }

      &__title {
        color: var(--blue_4, #59a1c0);
        font-size: spx(34);
        font-weight: 900;
        line-height: spx(34);
        letter-spacing: spx(2.38);
        position: relative;
        width: max-content;
        margin-inline: auto;
        @include tablet-up {
          font-size: ppx(34) * 1.2;
          line-height: ppx(34) * 1.2;
          letter-spacing: ppx(2.38) * 1.2;
        }
        @include desktop-up {
          font-size: ppx(34);
          line-height: ppx(34);
          letter-spacing: ppx(2.38);
        }
        // タイトル下線部
        &::after {
          content: '';
          position: absolute;
          bottom: spx(-20);
          left: 50%;
          transform: translateX(-50%);
          width: 100%;
          height: spx(5);
          background: linear-gradient(
            to right,
            var(--green_2, #adc400) 0%,
            /* 左：緑色 */ var(--green_2, #adc400) 48.6%,
            /* 87/179 ≈ 48.6% まで緑 */ transparent 48.6%,
            /* 透明開始 */ transparent 51.4%,
            /* 透明終了 (48.6% + 5/179*100% ≈ 51.4%) */ var(--blue_4, #59a1c0)
              51.4%,
            /* 青色開始 */ var(--blue_4, #59a1c0) 100% /* 右端まで青 */
          );
          @include tablet-up {
            bottom: ppx(-20) * 1.2;
            height: ppx(5) * 1.2;
          }
          @include desktop-up {
            bottom: ppx(-20);
            height: ppx(5);
          }
        }
      }

      &__subtitle {
        color: var(--blue_6, #054965);
        font-size: spx(60);
        line-height: 120%;
        writing-mode: vertical-rl;
        margin: spx(60) auto 0;
        display: flex;
        flex-flow: column;
        gap: spx(40);

        @include tablet-up {
          font-size: ppx(60) * 1.2;
          line-height: 120%;
          margin-top: ppx(60) * 1.2;
          gap: ppx(45) * 1.2;
        }
        @include desktop-up {
          font-size: ppx(60);
          line-height: 120%;
          margin-top: ppx(60);
          gap: ppx(45);
        }
      }

      &__subtitle-line {
        display: block;
      }

      &__content {
        position: relative;
        margin-top: spx(90);
        @include tablet-up {
          margin-top: 3vw;
        }
        @include desktop-up {
          margin-top: ppx(17);
        }
      }

      &__image {
        display: block;
        &--main {
          width: spx(606);
          height: spx(464);
          border-radius: 0 spx(30) spx(30) 0;
          overflow: hidden;
          @include tablet-up {
            width: 36vw;
            height: ppx(948) * 1.2;
            border-radius: ppx(30) * 1.2;
            position: absolute;
            top: ppx(179) * 1.2;
            left: ppx(150) * 1.2;
          }
          @include desktop-up {
            width: ppx(1180);
            height: ppx(948);
            border-radius: ppx(30);
            top: ppx(179);
            left: ppx(150);
          }
        }

        &--sub {
          width: spx(546);
          height: spx(410);
          border-radius: spx(30) 0 0 spx(30);
          overflow: hidden;
          margin-left: auto;
          margin-right: 0;
          margin-top: spx(50);
          @include tablet-up {
            width: ppx(867) * 1.2;
            height: ppx(651) * 1.2;
            border-radius: ppx(30) * 1.2 0 0 ppx(30) * 1.2;
            margin-top: ppx(139) * 1.2;
          }
          @include desktop-up {
            width: ppx(867);
            height: ppx(651);
            border-radius: ppx(30) 0 0 ppx(30);
            margin-top: ppx(139);
          }
        }
        img {
          display: block;
          width: 100%;
          height: 100%;
          object-fit: cover;
        }
      }

      &__description {
        color: var(--blue_6, #054965);
        font-size: spx(34);
        line-height: 122%;
        writing-mode: vertical-rl;
        margin: spx(113) auto 0;
        display: flex;
        flex-flow: column;
        gap: spx(20);
        @include tablet-up {
          font-size: ppx(34) * 1.2;
          line-height: 122%;
          margin-left: auto;
          margin-right: 6vw;
          margin-top: 0;
          gap: ppx(35) * 1.2;
        }
        @include desktop-up {
          font-size: ppx(34);
          line-height: 122%;
          margin-left: auto;
          margin-right: ppx(273);
          gap: ppx(35);
        }
      }

      &__description-line {
        display: block;
      }
    }
  </style>
</html>
